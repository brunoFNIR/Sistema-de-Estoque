/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.mycompany.projetointersistemaestoque;

import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author PC
 */
public class MenuEdicaoItens extends javax.swing.JFrame {

    //objetos criados para funcionarem como uma espécie de entre muitas aspas, variavel de controle;
    //eles são os responsáveis por chamarem os métodos dos arrayLists
    BlusaMoletom bm = new BlusaMoletom();
    CamisaPolo cp = new CamisaPolo();
    Camiseta c = new Camiseta();
    public MenuEdicaoItens() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        cmbItemEdit = new javax.swing.JComboBox<>();
        campoQuantidadeEdit = new javax.swing.JTextField();
        txtId = new javax.swing.JLabel();
        txtItem = new javax.swing.JLabel();
        txtCor = new javax.swing.JLabel();
        campoIdEdit = new javax.swing.JTextField();
        txtPrecoCusto = new javax.swing.JLabel();
        campoPrecoCustoEdit = new javax.swing.JTextField();
        txtPrecoVenda = new javax.swing.JLabel();
        campoPrecoVendaEdit = new javax.swing.JTextField();
        btnSalvar = new javax.swing.JButton();
        txtQuantidade = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        txtITamanho = new javax.swing.JLabel();
        cmbTamanhoEdit = new javax.swing.JComboBox<>();
        btnVoltar = new javax.swing.JButton();
        campoCorEdit = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblProdutos = new javax.swing.JTable();
        btnRemover = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        cmbItemEdit.setBackground(new java.awt.Color(255, 204, 102));
        cmbItemEdit.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        cmbItemEdit.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { " ", "Blusa Moletom", "Camisa Polo", "Camiseta" }));
        cmbItemEdit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbItemEditActionPerformed(evt);
            }
        });

        campoQuantidadeEdit.setBackground(new java.awt.Color(255, 204, 102));
        campoQuantidadeEdit.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        campoQuantidadeEdit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                campoQuantidadeEditActionPerformed(evt);
            }
        });

        txtId.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        txtId.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        txtId.setText("ID:");

        txtItem.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        txtItem.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        txtItem.setText("Item:");

        txtCor.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        txtCor.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        txtCor.setText("Cor:");

        campoIdEdit.setBackground(new java.awt.Color(255, 204, 102));
        campoIdEdit.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        campoIdEdit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                campoIdEditActionPerformed(evt);
            }
        });

        txtPrecoCusto.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        txtPrecoCusto.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        txtPrecoCusto.setText("Preco Custo:");

        campoPrecoCustoEdit.setBackground(new java.awt.Color(255, 204, 102));
        campoPrecoCustoEdit.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        campoPrecoCustoEdit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                campoPrecoCustoEditActionPerformed(evt);
            }
        });

        txtPrecoVenda.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        txtPrecoVenda.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        txtPrecoVenda.setText("Preco Venda:");

        campoPrecoVendaEdit.setBackground(new java.awt.Color(255, 204, 102));
        campoPrecoVendaEdit.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        campoPrecoVendaEdit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                campoPrecoVendaEditActionPerformed(evt);
            }
        });

        btnSalvar.setBackground(new java.awt.Color(255, 160, 19));
        btnSalvar.setFont(new java.awt.Font("Segoe UI", 0, 30)); // NOI18N
        btnSalvar.setText("Salvar");
        btnSalvar.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnSalvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSalvarActionPerformed(evt);
            }
        });

        txtQuantidade.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        txtQuantidade.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        txtQuantidade.setText("Quantidade:");

        jLabel1.setFont(new java.awt.Font("Segoe UI", 0, 40)); // NOI18N
        jLabel1.setText("Edição");

        txtITamanho.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        txtITamanho.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        txtITamanho.setText("Tamanho:");

        cmbTamanhoEdit.setBackground(new java.awt.Color(255, 204, 102));
        cmbTamanhoEdit.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        cmbTamanhoEdit.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { " ", "P", "M", "G", "GG" }));
        cmbTamanhoEdit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbTamanhoEditActionPerformed(evt);
            }
        });

        btnVoltar.setBackground(new java.awt.Color(255, 160, 19));
        btnVoltar.setFont(new java.awt.Font("Segoe UI", 0, 20)); // NOI18N
        btnVoltar.setText("Voltar");
        btnVoltar.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnVoltar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnVoltarActionPerformed(evt);
            }
        });

        campoCorEdit.setBackground(new java.awt.Color(255, 204, 102));
        campoCorEdit.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        campoCorEdit.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                campoCorEditFocusLost(evt);
            }
        });
        campoCorEdit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                campoCorEditActionPerformed(evt);
            }
        });

        tblProdutos.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        tblProdutos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Item", "Tamanho", "Cor", "Quantidade", "Preço Custo", "Preço Venda"
            }
        ));
        tblProdutos.setToolTipText("");
        tblProdutos.setRowHeight(40);
        jScrollPane1.setViewportView(tblProdutos);

        btnRemover.setBackground(new java.awt.Color(255, 160, 19));
        btnRemover.setFont(new java.awt.Font("Segoe UI", 0, 30)); // NOI18N
        btnRemover.setText("Remover");
        btnRemover.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnRemover.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRemoverActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(356, 356, 356)
                .addComponent(btnSalvar)
                .addGap(39, 39, 39)
                .addComponent(btnRemover)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnVoltar)
                .addGap(18, 18, 18))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(452, 452, 452)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(16, 16, 16)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(txtPrecoVenda)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(campoPrecoVendaEdit, javax.swing.GroupLayout.PREFERRED_SIZE, 267, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(txtCor)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(campoCorEdit, javax.swing.GroupLayout.PREFERRED_SIZE, 268, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                        .addGap(6, 6, 6)
                                        .addComponent(txtPrecoCusto)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(campoPrecoCustoEdit, javax.swing.GroupLayout.PREFERRED_SIZE, 268, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                        .addGap(9, 9, 9)
                                        .addComponent(txtQuantidade)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(campoQuantidadeEdit, javax.swing.GroupLayout.PREFERRED_SIZE, 267, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(txtITamanho)
                                    .addComponent(txtItem, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(cmbTamanhoEdit, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(12, 12, 12)
                                        .addComponent(txtId)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(campoIdEdit, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(cmbItemEdit, javax.swing.GroupLayout.PREFERRED_SIZE, 268, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(48, 48, 48)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 589, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(17, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(33, 33, 33)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(cmbItemEdit, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtItem, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtId, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(campoIdEdit, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(cmbTamanhoEdit, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(txtITamanho, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(campoCorEdit, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtCor, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(campoQuantidadeEdit, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtQuantidade, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtPrecoCusto, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(campoPrecoCustoEdit, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtPrecoVenda, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(campoPrecoVendaEdit, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 331, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnSalvar, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnRemover, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnVoltar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(36, 36, 36))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void campoQuantidadeEditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_campoQuantidadeEditActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_campoQuantidadeEditActionPerformed

    private void campoIdEditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_campoIdEditActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_campoIdEditActionPerformed

    private void campoPrecoCustoEditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_campoPrecoCustoEditActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_campoPrecoCustoEditActionPerformed

    private void campoPrecoVendaEditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_campoPrecoVendaEditActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_campoPrecoVendaEditActionPerformed

    private void btnSalvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSalvarActionPerformed
        // TODO add your handling code here:
        //parte do código responsável por atualizar o valor dos atributos editados pelo usuário
        
        //verificações para o sistema saber qual produto o usuário está tentando editar 
        if (cmbItemEdit.getSelectedItem() == "Blusa Moletom"){
            for(int i = 0; i < bm.retornarBlusasMoletom().size(); i++){
                if (bm.retornarBlusasMoletom().get(i).getTamanho().equals(cmbTamanhoEdit.getSelectedItem().toString())){
                    if(bm.retornarBlusasMoletom().get(i).getCor().equals(campoCorEdit.getText().toUpperCase())){
                        bm.retornarBlusasMoletom().get(i).setPrecoCusto(Double.parseDouble(campoPrecoCustoEdit.getText()));
                        bm.retornarBlusasMoletom().get(i).setPrecoVenda(Double.parseDouble(campoPrecoVendaEdit.getText()));
                        bm.retornarBlusasMoletom().get(i).setQuantidade(Integer.parseInt(campoQuantidadeEdit.getText()));
                        
                        //e mostrar para o usuario esses valores alterados na tabela ao lado
                        
                        //definindo modelo de tabela
                        DefaultTableModel tabelaProdutos = (DefaultTableModel) tblProdutos.getModel();
            
                            //limpar tabela
                            for (int j = 0; j < tabelaProdutos.getRowCount(); j++){
                                tabelaProdutos.removeRow(j);
                                if(tabelaProdutos.getRowCount() != 0){
                                    while(tabelaProdutos.getRowCount() != 0){
                                        tabelaProdutos.removeRow(0);
                                    }
                                }
                            }

                            for (int j = 0; j < bm.retornarBlusasMoletom().size(); j++){
                                tabelaProdutos.addRow(bm.dadosAtualizaTabelaBL(j));
                        }
                    }
                }
            }
        }else if(cmbItemEdit.getSelectedItem() == "Camisa Polo"){
            for (int i = 0; i < cp.retornarCamisasPolo().size(); i++ ){
                if(cp.retornarCamisasPolo().get(i).getTamanho().equals(cmbTamanhoEdit.getSelectedItem().toString())){
                    if(cp.retornarCamisasPolo().get(i).getCor().equals(campoCorEdit.getText().toUpperCase())){
                        cp.retornarCamisasPolo().get(i).setPrecoCusto(Double.parseDouble(campoPrecoCustoEdit.getText()));
                        cp.retornarCamisasPolo().get(i).setPrecoVenda(Double.parseDouble(campoPrecoVendaEdit.getText()));
                        cp.retornarCamisasPolo().get(i).setQuantidade(Integer.parseInt(campoQuantidadeEdit.getText()));
                        
                        
                        
                        DefaultTableModel tabelaProdutos = (DefaultTableModel) tblProdutos.getModel();

                            //limpar tabela
                            for (int j = 0; j < tabelaProdutos.getRowCount(); j++){
                                tabelaProdutos.removeRow(j);
                                if(tabelaProdutos.getRowCount() != 0){
                                    while(tabelaProdutos.getRowCount() != 0){
                                        tabelaProdutos.removeRow(0);
                                    }
                                }
                            }

                            for (int j = 0; j < cp.retornarCamisasPolo().size(); j++){
                                tabelaProdutos.addRow(cp.dadosAtualizaTabelaCP(j));
                        }
                    }
                }
            }
        }else if (cmbItemEdit.getSelectedItem() == "Camiseta"){
                for (int i = 0; i < c.retornarCamisetas().size(); i++ ){
                    if(c.retornarCamisetas().get(i).getTamanho().equals(cmbTamanhoEdit.getSelectedItem().toString())){
                        if(c.retornarCamisetas().get(i).getCor().equals(campoCorEdit.getText().toUpperCase())){
                            c.retornarCamisetas().get(i).setPrecoCusto(Double.parseDouble(campoPrecoCustoEdit.getText()));
                            c.retornarCamisetas().get(i).setPrecoVenda(Double.parseDouble(campoPrecoVendaEdit.getText()));
                            c.retornarCamisetas().get(i).setQuantidade(Integer.parseInt(campoQuantidadeEdit.getText()));


                            DefaultTableModel tabelaProdutos = (DefaultTableModel) tblProdutos.getModel();

                                //limpar tabela
                                for (int j = 0; j < tabelaProdutos.getRowCount(); j++){
                                    tabelaProdutos.removeRow(j);
                                    if(tabelaProdutos.getRowCount() != 0){
                                        while(tabelaProdutos.getRowCount() != 0){
                                            tabelaProdutos.removeRow(0);
                                        }
                                    }
                                }

                                for (int j = 0; j < c.retornarCamisetas().size(); j++){
                                    tabelaProdutos.addRow(c.dadosAtualizaTabelaC(j));
                            }
                        }
                    }
                }
        }
    }//GEN-LAST:event_btnSalvarActionPerformed

    private void cmbTamanhoEditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbTamanhoEditActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cmbTamanhoEditActionPerformed

    private void btnVoltarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnVoltarActionPerformed
        // TODO add your handling code here:
        this.dispose();
    }//GEN-LAST:event_btnVoltarActionPerformed

    private void campoCorEditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_campoCorEditActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_campoCorEditActionPerformed

    private void btnRemoverActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRemoverActionPerformed
        // TODO add your handling code here:
        //parte do código para remover o produto selecionado (por meio do item, tamanho e cor)
        
        //verificações para o sistema saber qual produto o usuário está tentando remover
        if(cmbItemEdit.getSelectedItem() == "Blusa Moletom"){
            for (int i = 0; i < bm.retornarBlusasMoletom().size(); i++){
                if(bm.retornarBlusasMoletom().get(i).getTamanho().equals(cmbTamanhoEdit.getSelectedItem().toString())){
                    if(bm.retornarBlusasMoletom().get(i).getCor().equals(campoCorEdit.getText().toUpperCase())){
                        bm.retornarBlusasMoletom().remove(i);
                    
                        JOptionPane.showMessageDialog(null, "Produto Removido");
                        
                        //e mostrar para o usuario esses valores alterados na tabela ao lado
                        
                        //definindo modelo de tabela
                        DefaultTableModel tabelaProdutos = (DefaultTableModel) tblProdutos.getModel();
            
                        //limpar tabela
                         for (int j = 0; j < tabelaProdutos.getRowCount(); j++){
                             tabelaProdutos.removeRow(j);
                             if(tabelaProdutos.getRowCount() != 0){
                                 while(tabelaProdutos.getRowCount() != 0){
                                     tabelaProdutos.removeRow(0);
                                 }
                             }
                         }

                         for (int j = 0; j < bm.retornarBlusasMoletom().size(); j++){
                             tabelaProdutos.addRow(bm.dadosAtualizaTabelaBL(j));
                        }
                    }
                }
            }
        }else if (cmbItemEdit.getSelectedItem() == "Camisa Polo"){
            for(int i = 0; i < cp.retornarCamisasPolo().size(); i++){
                if (cp.retornarCamisasPolo().get(i).getTamanho().equals(cmbTamanhoEdit.getSelectedItem().toString())){
                    if(cp.retornarCamisasPolo().get(i).getCor().equals(campoCorEdit.getText().toUpperCase())){
                        cp.retornarCamisasPolo().remove(i);
                        
                        JOptionPane.showMessageDialog(null, "Produto Removido");
                        
                        DefaultTableModel tabelaProdutos = (DefaultTableModel) tblProdutos.getModel();
            
                        
                        //limpar tabela
                        for (int j = 0; j < tabelaProdutos.getRowCount(); j++){
                            tabelaProdutos.removeRow(j);
                            if(tabelaProdutos.getRowCount() != 0){
                                while(tabelaProdutos.getRowCount() != 0){
                                    tabelaProdutos.removeRow(0);
                                }
                            }
                        }

                        for (int j = 0; j < cp.retornarCamisasPolo().size(); j++){
                            tabelaProdutos.addRow(cp.dadosAtualizaTabelaCP(j));
                        }
                    }
                }else{
                    JOptionPane.showMessageDialog(null, "Para remover um produto, é necessário inserir o item, tamanho e cor.");
                }
            }
        }else if (cmbItemEdit.getSelectedItem() == "Camiseta"){
            for(int i = 0; i < c.retornarCamisetas().size(); i++){
                if (c.retornarCamisetas().get(i).getTamanho().equals(cmbTamanhoEdit.getSelectedItem().toString())){
                    if(c.retornarCamisetas().get(i).getCor().equals(campoCorEdit.getText().toUpperCase())){
                        c.retornarCamisetas().remove(i);
                        
                        JOptionPane.showMessageDialog(null, "Produto Removido");
                        
                        DefaultTableModel tabelaProdutos = (DefaultTableModel) tblProdutos.getModel();
            
                        
                        //limpar tabela
                        for (int j = 0; j < tabelaProdutos.getRowCount(); j++){
                            tabelaProdutos.removeRow(j);
                            if(tabelaProdutos.getRowCount() != 0){
                                while(tabelaProdutos.getRowCount() != 0){
                                    tabelaProdutos.removeRow(0);
                                }
                            }
                        }

                        for (int j = 0; j < c.retornarCamisetas().size(); j++){
                            tabelaProdutos.addRow(c.dadosAtualizaTabelaC(j));
                        }
                    }
                }else{
                    JOptionPane.showMessageDialog(null, "Para remover um produto, é necessário inserir o item, tamanho e cor.");
                }
            }
        }
        
        campoCorEdit.setText("");
        campoPrecoCustoEdit.setText("");
        campoPrecoVendaEdit.setText("");
        campoQuantidadeEdit.setText("");
    }//GEN-LAST:event_btnRemoverActionPerformed

    private void cmbItemEditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbItemEditActionPerformed
        // TODO add your handling code here:
        //assim que o item for selecionado, sera gerada sua devida tabela com seus respectivos produtos
        if (cmbItemEdit.getSelectedItem() == "Blusa Moletom"){
            
            DefaultTableModel tabelaProdutos = (DefaultTableModel) tblProdutos.getModel();
            
            //limpar tabela
            for (int j = 0; j < tabelaProdutos.getRowCount(); j++){
                tabelaProdutos.removeRow(j);
                if(tabelaProdutos.getRowCount() != 0){
                    while(tabelaProdutos.getRowCount() != 0){
                        tabelaProdutos.removeRow(0);
                    }
                }
            }
            for (int i = 0; i < bm.retornarBlusasMoletom().size(); i++){
                    tabelaProdutos.addRow(bm.dadosAtualizaTabelaBL(i));
                }
            
            campoIdEdit.setText("200");
            campoCorEdit.setText("");
            campoQuantidadeEdit.setText("");
            campoPrecoCustoEdit.setText("");
            campoPrecoVendaEdit.setText("");
            
        }else if (cmbItemEdit.getSelectedItem() == "Camisa Polo"){
            
            DefaultTableModel tabelaProdutos = (DefaultTableModel) tblProdutos.getModel();
            
    
                //limpar tabela
                for (int j = 0; j < tabelaProdutos.getRowCount(); j++){
                    tabelaProdutos.removeRow(j);
                    if(tabelaProdutos.getRowCount() != 0){
                        while(tabelaProdutos.getRowCount() != 0){
                            tabelaProdutos.removeRow(0);
                        }
                    }
                }

                for (int i = 0; i < cp.retornarCamisasPolo().size(); i++){
                    tabelaProdutos.addRow(cp.dadosAtualizaTabelaCP(i));
                }
                
            campoIdEdit.setText("100");
            campoCorEdit.setText("");
            campoQuantidadeEdit.setText("");
            campoPrecoCustoEdit.setText("");
            campoPrecoVendaEdit.setText("");

            
        }else if (cmbItemEdit.getSelectedItem() == "Camiseta"){
            
            DefaultTableModel tabelaProdutos = (DefaultTableModel) tblProdutos.getModel();
            
                //limpar tabela
                for (int j = 0; j < tabelaProdutos.getRowCount(); j++){
                    tabelaProdutos.removeRow(j);
                    if(tabelaProdutos.getRowCount() != 0){
                        while(tabelaProdutos.getRowCount() != 0){
                            tabelaProdutos.removeRow(0);
                        }
                    }
                }

                
                for (int i = 0; i < c.retornarCamisetas().size(); i++){
                    tabelaProdutos.addRow(c.dadosAtualizaTabelaC(i));
                }
                
            campoIdEdit.setText("150");
            campoCorEdit.setText("");
            campoQuantidadeEdit.setText("");
            campoPrecoCustoEdit.setText("");
            campoPrecoVendaEdit.setText("");

            
        }
    }//GEN-LAST:event_cmbItemEditActionPerformed

    private void campoCorEditFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_campoCorEditFocusLost
        // TODO add your handling code here:
        //preencher os outros campos automaticamente, depois de ser selecionado o item, o tamanho e preenchido o campoCor
        if (cmbItemEdit.getSelectedItem() == "Blusa Moletom"){
            for (int i = 0; i < bm.retornarBlusasMoletom().size(); i++ ){
                if(bm.retornarBlusasMoletom().get(i).getTamanho().equals(cmbTamanhoEdit.getSelectedItem().toString())){
                    if(bm.retornarBlusasMoletom().get(i).getCor().equals(campoCorEdit.getText().toUpperCase())){
                        
                        campoPrecoCustoEdit.setText(Double.toString(bm.retornarBlusasMoletom().get(i).getPrecoCusto()));
                        campoPrecoVendaEdit.setText(Double.toString(bm.retornarBlusasMoletom().get(i).getPrecoVenda()));
                        campoQuantidadeEdit.setText(Integer.toString(bm.retornarBlusasMoletom().get(i).getQuantidade()));
                    }
                }
            }
        }else if (cmbItemEdit.getSelectedItem() == "Camisa Polo"){
            for (int i = 0; i < cp.retornarCamisasPolo().size(); i++ ){
                if(cp.retornarCamisasPolo().get(i).getTamanho().equals(cmbTamanhoEdit.getSelectedItem().toString())){
                    if(cp.retornarCamisasPolo().get(i).getCor().equals(campoCorEdit.getText().toUpperCase())){
                        
                        campoPrecoCustoEdit.setText(Double.toString(cp.retornarCamisasPolo().get(i).getPrecoCusto()));
                        campoPrecoVendaEdit.setText(Double.toString(cp.retornarCamisasPolo().get(i).getPrecoVenda()));
                        campoQuantidadeEdit.setText(Integer.toString(cp.retornarCamisasPolo().get(i).getQuantidade()));
                    }
                }
            }
        }else if (cmbItemEdit.getSelectedItem() == "Camiseta"){
            for (int i = 0; i < c.retornarCamisetas().size(); i++ ){
                if(c.retornarCamisetas().get(i).getTamanho().equals(cmbTamanhoEdit.getSelectedItem().toString())){
                    if(c.retornarCamisetas().get(i).getCor().equals(campoCorEdit.getText().toUpperCase())){
                        
                        campoPrecoCustoEdit.setText(Double.toString(c.retornarCamisetas().get(i).getPrecoCusto()));
                        campoPrecoVendaEdit.setText(Double.toString(c.retornarCamisetas().get(i).getPrecoVenda()));
                        campoQuantidadeEdit.setText(Integer.toString(c.retornarCamisetas().get(i).getQuantidade()));
                    }
                }
            }
        }
    }//GEN-LAST:event_campoCorEditFocusLost

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MenuEdicaoItens.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MenuEdicaoItens.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MenuEdicaoItens.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MenuEdicaoItens.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MenuEdicaoItens().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnRemover;
    private javax.swing.JButton btnSalvar;
    private javax.swing.JButton btnVoltar;
    private javax.swing.JTextField campoCorEdit;
    private javax.swing.JTextField campoIdEdit;
    private javax.swing.JTextField campoPrecoCustoEdit;
    private javax.swing.JTextField campoPrecoVendaEdit;
    private javax.swing.JTextField campoQuantidadeEdit;
    private javax.swing.JComboBox<String> cmbItemEdit;
    private javax.swing.JComboBox<String> cmbTamanhoEdit;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblProdutos;
    private javax.swing.JLabel txtCor;
    private javax.swing.JLabel txtITamanho;
    private javax.swing.JLabel txtId;
    private javax.swing.JLabel txtItem;
    private javax.swing.JLabel txtPrecoCusto;
    private javax.swing.JLabel txtPrecoVenda;
    private javax.swing.JLabel txtQuantidade;
    // End of variables declaration//GEN-END:variables
}
